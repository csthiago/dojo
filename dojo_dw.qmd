---
title: "Data Wrangling"
author: "Thiago Cerqueira-Silva"
format: html
editor: visual
---

## Data Wrangling

### Funções Básicas

-   filter() : Filtrar linhas
-   select() : Filtrar colunas
-   rename() : Renomear colunas
-   relocate() : Reposicionar colunas
-   arrange() : ordenar linhas por alguma coluna
-   mutate(): modificar colunas
-   across(): operações em múltiplas colunas
-   group_by(): fazer a operação por grupo
-   summarise() : calcular estatísticas
-   rowwise() : operações por linha

## Code

```{r}
pacman::p_load(tidyverse,palmerpenguins)
data("penguins")
penguins
glimpse(penguins)

```

# Filter

```{r}
## básico
penguins |> filter(!(sex=="male"| is.na(sex)))

penguins |> filter(sex=="male") |> filter(year=="2007")
## múltiplos
penguins |> filter(sex=="male", year==2007)

## avançado
penguins |> filter(case_when(
  is.na(sex) ~ F,
  sex=="male" ~ body_mass_g<4000,
  TRUE ~ TRUE
))

```

# Select

```{r}
# básico
penguins |> select(species, sex, year)
penguins |>
  relocate(sex, .before = species) |>
  select(-species)

penguins |>
  relocate(sex, .before = species) |>
  select(-1)
penguins |> select(-species)
penguins |> select(-1)

# avançado
penguins |> select(where(is.double))

penguins |> select(starts_with("s"))
```

# Rename

```{r}
penguins |> rename(ilha=island,
                   especie=species)
```

# Relocate

```{r}
penguins |> relocate(sex, .before = species)

penguins |> relocate(c(sex,year), .before = species)
penguins |> relocate(c(sex,year),.after=island)
```

# Arrange

```{r}
penguins |> arrange(bill_length_mm)

penguins |> arrange(species, desc(flipper_length_mm))
```

# Mutate

```{r}
penguins |> mutate(length_depth = bill_length_mm / bill_depth_mm)
penguins |> mutate(spec_adelie = species == "Adelie")

penguins |>
  mutate(length_depth = bill_length_mm / bill_depth_mm) |>
  relocate(length_depth, .after = bill_depth_mm)
```

# Group_by

```{r}
# básico
penguins |> count(sex)
penguins |>
  group_by(species) |>
  count(sex)

# avançado
penguins |>
  group_by(peso_3k = body_mass_g > 3000) |>
  count(sex)
penguins |>
  group_by(peso_3k = +(body_mass_g > 3000)) |>
  count(sex)
```

# Summarise

```{r}
penguins |> summarise(mean_length = mean(bill_length_mm))

penguins |> summarise(mean_length = mean(bill_length_mm, na.rm = T))
penguins |> summarise(
  mean_length = mean(bill_length_mm, na.rm = T),
  sd_length = sd(bill_length_mm, na.rm = T)
)


penguins |>
  group_by(sex) |>
  summarise(
    mean_length = mean(bill_length_mm, na.rm = T),
    sd_length = sd(bill_length_mm, na.rm = T)
  )

# avançado
penguins |>
  group_by(sex) |>
  summarise(across(bill_length_mm:bill_depth_mm, list(mean, sd)))


penguins |>
  group_by(sex) |>
  summarise(across(bill_length_mm:bill_depth_mm, list(mean = mean, sd = sd), .names = "{.fn}.{.col}"))

```

# Across

```{r}
starwars %>% 
  group_by(species) %>% 
  filter(n() > 1) %>% 
  summarise(across(c(sex, gender, homeworld), 
                   ~ length(unique(.x))),
                   n=n())
```

# Rowwise

```{r}
fruits <- tribble(
  ~"fruit", ~"height_1", ~"height_2", ~"height_3", ~"width", ~"weight",
  "Banana", 4.4, 4.2, 3.5, 1, 0.5,
  "Strawberry", 1, .9, 1.2, 1, .25,
  "Pineapple", 18, 17.7, 19.2, 6, 3
)
fruits

fruits |> mutate(across(height_1:height_3, mean))

fruits |>
  group_by(fruit) |>
  mutate(across(height_1:height_3, mean))

fruits |>
  rowwise() |>
  mutate(mean_height = mean(height_1:height_3))
fruits |>
  rowwise() |>
  mutate(mean_height = mean(c(height_1:height_3)))

fruits |>
  rowwise() |>
  mutate(mean_height = mean(c(height_1, height_2, height_3)))

# c_across

fruits |>
  rowwise() |>
  mutate(mean_height = mean(c_across(starts_with("height"))))

```

# Pivot

![](https://epirhandbook.com/en/images/pivoting/pivot_longer_new.png){fig-align="center"}

## Longer/Wider

```{r}

# básico
## Longer
relig_income

relig_income |> 
  pivot_longer(!religion, names_to = "income", values_to = "count") |> 
  pivot_wider(id_cols = religion, names_from = "income", values_from = "count")



## Wider
fish_encounters

fish_encounters %>% pivot_wider(id_cols=fish, names_from = station, values_from = seen)


```

```{r}
# avançado
who <- tidyr::who
who
who |>  pivot_longer(
  cols = new_sp_m014:newrel_f65,
  names_to = c("diagnosis", "gender", "age"), 
  names_pattern = "new_?(.*)_(.)(.*)",  #? lazy operator
  values_to = "count"
) |> pivot_wider(names_from = diagnosis,values_from = count)


who |>  pivot_longer(
  cols = new_sp_m014:newrel_f65,
  names_to = c("diagnosis", "gender", "age"), 
  names_pattern = "new_?(.*)_(.)(.*)",  #? lazy operator
  values_to = "count"
) |> pivot_wider(names_from = diagnosis,values_from = count)



who |>  pivot_longer(
  cols = new_sp_m014:newrel_f65,
  names_to = c("diagnosis", "gender", "age"), 
  names_pattern = "new_?(.*)_(.)(.*)",  #? lazy operator
  values_to = "count"
) |> pivot_wider(names_from = diagnosis,values_from = count,
                names_glue = "diagnostico_{.name}")


who |> select(country:year,starts_with("new_sp_")) |> 
  pivot_longer(cols=-c(country:year),
               names_to = c("level",".value"),
               values_to = "values",
               names_pattern = "(new)_(.*)")




```

[Pivoting - Tidyr](https://tidyr.tidyverse.org/articles/pivot.html)

# Separate

```{r}

dt <- tibble::tribble(
    ~source_id, ~dataInicioSintomas,                                         ~sintomas,   ~racaCor,
  "Pfotk8d16q",        "2020-04-06",                          "Tosse, Dor de Garganta",    "Parda",
  "9eGwDjq31Z",        "2022-07-09",                            "Tosse, Outros, Febre",    "Parda",
  "DSUGab6UnD",        "2020-04-06",                                   "Tosse, Outros",   "Branca",
  "b7MfdSfV6b",                  NA,                                   "Assintomático",    "Parda",
  "zeicPuSeE8",        "2020-04-09",         "Tosse, Febre, Dispneia, Dor de Garganta",    "Parda",
  "UPD7EtQRSZ",                  NA,                                   "Assintomático", "Indigena",
  "YoeM3EHygZ",        "2020-04-06",         "Tosse, Febre, Dispneia, Dor de Garganta",   "Branca",
  "4UHqmkGnWI",        "2021-12-27", "Dor de Cabeça, Febre, Dispneia, Dor de Garganta",    "Parda",
  "1KZu0VWhrf",        "2020-04-20",                          "Febre, Dor de Garganta",    "Parda",
  "VvxkfeqDDW",        "2022-02-07",                           "Coriza, Tosse, Outros", "Ignorado"
)


dt
dt |>  separate(sintomas, sep=",", into=c("sintoma1","sintoma2"))
dt |> separate_rows(sintomas,sep=",")


dt |> separate_rows(sintomas,sep=",") |> 
    pivot_wider(id_cols = c(source_id,dataInicioSintomas,racaCor),
                values_fn = length,
                values_from = sintomas,
                names_from = sintomas)

dt |> separate_rows(sintomas,sep=",") |> 
    pivot_wider(id_cols = c(source_id,dataInicioSintomas,racaCor),
                values_fn = length,
                values_from = sintomas,
                names_from = sintomas) |> 
  mutate(across(-c(source_id:racaCor),~if_else(!is.na(.x),.x,0L)))

```
